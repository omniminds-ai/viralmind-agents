# Development
services:
  windows:
    image: dockurr/windows
    container_name: windows
    environment:
      VERSION: "11"
      USERNAME: "ai"
      PASSWORD: "admin"
      VNC_PASSWORD: "admin"
      WIDTH: 1280
      HEIGHT: 720
    devices:
      - /dev/kvm
      - /dev/net/tun
    volumes:
      - ./vm/storage:/storage
    cap_add:
      - NET_ADMIN
    ports:
      - 8006:8006
      - 5901:5901 # VNC port 
      - 3390:3389 # RDP port
      - 6950:6950 # service server
    stop_grace_period: 2m
    networks:
      - node-network

  # holy guacamole
  guacd:
    image: guacamole/guacd
    platform: linux/amd64
    container_name: guacd
    restart: always
    volumes:
      - ./guacamole/recordings:/var/lib/guacamole/recordings:rw
      - ./guacamole/drive:/drive:rw
    ports:
      - "4822:4822"
    networks:
      - node-network 
  mysql:
    image: mysql:5.7
    platform: linux/amd64
    container_name: guac_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: guacamole_root_pw
      MYSQL_DATABASE: guacamole_db
      MYSQL_USER: guacamole_user
      MYSQL_PASSWORD: guacamole_user_pw
    volumes:
      - guacamole_db:/var/lib/mysql
      - ./guacamole/initdb.sql:/docker-entrypoint-initdb.d/1.sql
    networks:
      - node-network 
  guacamole:
    image: guacamole/guacamole
    container_name: guacamole
    platform: linux/amd64
    restart: always
    depends_on:
      - guacd
      - mysql
    environment:
      GUACAMOLE_HOME: '/opt/guacamole_home'
      GUACD_HOSTNAME: guacd
      MYSQL_HOSTNAME: mysql
      MYSQL_DATABASE: guacamole_db
      MYSQL_USER: guacamole_user
      MYSQL_PASSWORD: guacamole_user_pw
      GUACAMOLE_CORS_ENABLED: 'true'
      GUACAMOLE_CORS_ALLOWED_ORIGINS: '*'
      GUACAMOLE_CORS_ALLOWED_METHODS: 'GET, POST, PUT, DELETE, OPTIONS'
    ports:
      - "8080:8080"
    volumes:
      - ./guacamole/home:/opt/guacamole_home
      - ./guacamole/recordings:/var/lib/guacamole/recordings:ro
      - ./guacamole/drive:/drive:rw
    links:
      - guacd
      - mysql
    networks:
      - node-network 

  back-end:
    build:
      context: backend
    container_name: back-end
    working_dir: /usr/src/app/backend
    networks:
      - node-network
    tty: true
    ports:
      - "8001:8001"
    command: npm run dev
    volumes:
      - ./backend:/usr/src/app/backend
      - /usr/src/app/backend/node_modules/  # This creates an anonymous volume for node_modules
      # training data output
      - ./backend/public/screenshots:/usr/src/app/backend/public/screenshots
      - ./guacamole/recordings:/var/lib/guacamole/recordings:ro
    environment:
      - DB_URI=${DB_URI}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPEN_AI_SECRET=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - RPC_URL=${RPC_URL}
      - ANCHOR_PROVIDER_URL=${ANCHOR_PROVIDER_URL}
      - IPC_SECRET=${IPC_SECRET}
      - FEEDBACK_WEBHOOK=${FEEDBACK_WEBHOOK}
      # Docker Specific Paths
      - ANCHOR_WALLET=/usr/src/app/backend/secrets/solana-keypair.json
      - ANCHOR_WORKSPACE=/usr/src/app/backend/jailbreak-pool
      - SERVICE_HOST=windows
      - SERVICE_PORT=6950
      - GYM_TREASURY_WALLET=${GYM_TREASURY_WALLET}
      - VIRAL_TOKEN=${VIRAL_TOKEN}
      - DIGITALOCEAN_API_KEY=${DIGITALOCEAN_API_KEY}
    depends_on:
      - mongodb
      - guacd
      # - windows
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mongodb:
    image: mongo:latest
    container_name: mongodb
    networks:
      - node-network
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  front-end:
    build:
      context: frontend
    container_name: front-end
    working_dir: /usr/src/app/frontend
    networks:
      - node-network
    tty: true
    ports:
      - "5173:5173"
    command: npm run dev
    volumes: # comment out the volumes if you get npm issues
      - ./frontend:/usr/src/app/frontend
      # - type: tmpfs
      #   target: /usr/src/app/frontend/node_modules/
      - /usr/src/app/frontend/node_modules/  # This creates an anonymous volume for node_modules
    environment:
      - NODE_ENV=development

  nginx:
    build:
      context: nginx
    container_name: nginx
    restart: always
    tty: true
    ports:
      - "80:80"
    networks:
      - node-network
    depends_on:
      - back-end
      - front-end

networks:
  node-network:
    driver: bridge

volumes:
  mongodb_data:
  guacamole_db:
