# Development
services:
  # windows:
  #   image: dockurr/windows
  #   container_name: windows
  #   environment:
  #     VERSION: "11"
  #     USERNAME: "ai"
  #     PASSWORD: "admin"
  #     VNC_PASSWORD: "admin"
  #     WIDTH: 1280
  #     HEIGHT: 720
  #   devices:
  #     - /dev/kvm
  #     - /dev/net/tun
  #   volumes:
  #     - ./vm/storage:/storage
  #   cap_add:
  #     - NET_ADMIN
  #   ports:
  #     - 8006:8006
  #     - 5901:5901 # VNC port 
  #     - 3390:3389 # RDP port
  #     - 6950:6950 # service server
  #   stop_grace_period: 2m
  #   networks:
  #     - node-network

  back-end:
    build:
      context: backend
    container_name: back-end
    working_dir: /usr/src/app/backend
    networks:
      - node-network
    tty: true
    ports:
      - "8001:8001"
    command: npm run dev
    volumes:
      - ./backend:/usr/src/app/backend
      - /usr/src/app/backend/node_modules/  # This creates an anonymous volume for node_modules
      # training data output
      - ./backend/public/screenshots:/usr/src/app/backend/public/screenshots
      - ./backend/public/recordings:/usr/src/app/backend/public/recordings
    environment:
      - DB_URI=${DB_URI}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPEN_AI_SECRET=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - RPC_URL=${RPC_URL}
      - ANCHOR_PROVIDER_URL=${ANCHOR_PROVIDER_URL}
      - IPC_SECRET=${IPC_SECRET}
      # Hardcoded gym vnc config
      - VNC_HOST_GYMTEST=${VNC_HOST_GYMTEST}
      - VNC_PASS_GYMTEST=${VNC_PASS_GYMTEST}
      # Docker Specific Paths
      - ANCHOR_WALLET=/usr/src/app/backend/secrets/solana-keypair.json
      - ANCHOR_WORKSPACE=/usr/src/app/backend/jailbreak-pool
      # VNC Configuration (replaced RDP config)
      - VNC_HOST=windows
      - VNC_PORT=5901
      - VNC_PASSWORD=admin
      - SERVICE_HOST=windows
      - SERVICE_PORT=6950
    depends_on:
      - mongodb
      # - windows
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mongodb:
    image: mongo:latest
    container_name: mongodb
    networks:
      - node-network
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  front-end:
    build:
      context: frontend
    container_name: front-end
    working_dir: /usr/src/app/frontend
    networks:
      - node-network
    tty: true
    ports:
      - "5173:5173"
    command: npm run dev
    volumes: # comment out the volumes if you get npm issues
      - ./frontend:/usr/src/app/frontend
      # - type: tmpfs
      #   target: /usr/src/app/frontend/node_modules/
      - /usr/src/app/frontend/node_modules/  # This creates an anonymous volume for node_modules
    environment:
      - NODE_ENV=development

  nginx:
    build:
      context: nginx
    container_name: nginx
    restart: always
    tty: true
    ports:
      - "80:80"
    networks:
      - node-network
    depends_on:
      - back-end
      - front-end

networks:
  node-network:
    driver: bridge

volumes:
  mongodb_data:
