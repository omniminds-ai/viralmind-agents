# Production
services:
  windows:
    image: dockurr/windows
    container_name: windows
    environment:
      VERSION: "11"
      USERNAME: "ai"
      PASSWORD: "admin"
      VNC_PASSWORD: "admin"
      WIDTH: 1280
      HEIGHT: 720
    devices:
      - /dev/kvm
      - /dev/net/tun
    volumes:
      - ./vm/storage:/storage
    cap_add:
      - NET_ADMIN
    ports:
      - 8006:8006
      - 5900:5900 # VNC port 
      - 3390:3389 # RDP port
      - 6950:6950 # service server
    stop_grace_period: 2m
    networks:
      - node-network

  back-end:
    build:
      context: backend
    container_name: back-end
    working_dir: /usr/src/app/backend
    networks:
      - node-network
    tty: true
    ports:
      - "8001:8001"
    command: npm start
    environment:
      - DB_URI=${DB_URI}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPEN_AI_SECRET=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - RPC_URL=#{RCP_URL}
      - ANCHOR_PROVIDER_URL=${ANCHOR_PROVIDER_URL}
      # Docker Specific Paths
      - ANCHOR_WALLET=/usr/src/app/backend/secrets/solana-keypair.json
      - ANCHOR_WORKSPACE=/usr/src/app/backend/jailbreak-pool
      # VNC Configuration
      - VNC_HOST=windows
      - VNC_PORT=5900
      - VNC_PASSWORD=admin
      - SERVICE_HOST=windows
      - SERVICE_PORT=6950
    depends_on:
      - mongodb
      - windows
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mongodb:
    image: mongo:latest
    container_name: mongodb
    networks:
      - node-network
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  front-end:
    build:
      context: svelte-frontend
    container_name: front-end
    working_dir: /usr/src/app/svelte-frontend
    networks:
      - node-network
    tty: true
    ports:
      - "5173:5173"
    command: sh -c "npm run build && npm run preview -- --host 0.0.0.0 --port 5173"

  nginx:
    build:
      context: nginx
    container_name: nginx
    restart: always
    tty: true
    ports:
      - "80:80"
    networks:
      - node-network
    depends_on:
      - back-end
      - front-end

networks:
  node-network:
    driver: bridge

volumes:
  mongodb_data:
