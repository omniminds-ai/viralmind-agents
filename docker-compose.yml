# Production
services:
  # Multi-Env Services

  mongodb:
    image: mongo:latest
    container_name: mongodb
    networks:
      - node-network
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  guacd:
    image: guacamole/guacd
    platform: linux/amd64
    container_name: guacd
    restart: always
    volumes:
      - ./guacamole/recordings:/var/lib/guacamole/recordings:rw
      - ./guacamole/drive:/drive:rw
    ports:
      - "4822:4822"
    networks:
      - node-network 

  guacamole:
    image: guacamole/guacamole
    container_name: guacamole
    platform: linux/amd64
    restart: always
    depends_on:
      - guacd
      - mysql
    environment:
      GUACAMOLE_HOME: '/opt/guacamole_home'
      GUACD_HOSTNAME: guacd
      MYSQL_HOSTNAME: mysql
      MYSQL_DATABASE: ${GUAC_MYSQL_DATABASE}
      MYSQL_USER: ${GUAC_MYSQL_USER}
      MYSQL_PASSWORD: ${GUAC_MYSQL_USER_PASSWORD}
      GUACAMOLE_CORS_ENABLED: 'true'
      GUACAMOLE_CORS_ALLOWED_ORIGINS: '*'
      GUACAMOLE_CORS_ALLOWED_METHODS: 'GET, POST, PUT, DELETE, OPTIONS'
    ports:
      - "8080:8080"
    volumes:
      - ./guacamole/home:/opt/guacamole_home
      - ./guacamole/recordings:/var/lib/guacamole/recordings:rw
      - ./guacamole/drive:/drive:rw
    links:
      - guacd
      - mysql
    networks:
      - node-network 
      
  mysql:
    platform: linux/amd64
    container_name: mysql
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${GUAC_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${GUAC_MYSQL_DATABASE}
      MYSQL_USER: ${GUAC_MYSQL_USER}
      MYSQL_PASSWORD: ${GUAC_MYSQL_USER_PASSWORD}
      GUACAMOLE_USERNAME: ${GUACAMOLE_USERNAME}
      GUACAMOLE_PASSWORD: ${GUACAMOLE_PASSWORD}
    volumes:
      - guacamole_db:/var/lib/mysql
      - ./guacamole/initdb.sh:/docker-entrypoint-initdb.d/initdb.sh
    networks:
      - node-network

  # Production Services
  nginx-prod:
    profiles:
      - production
    build:
      context: nginx
    container_name: nginx
    restart: always
    tty: true
    ports:
      - "80:80"
    networks:
      - node-network
    depends_on:
      - backend-prod
      - frontend-prod

  backend-prod:
    profiles:
      - production
    build:
      context: backend
    container_name: backend
    working_dir: /usr/src/app/backend
    networks:
      - node-network
    tty: true
    ports:
      - "8001:8001"
    command:  sh -c "npm run build && npm run start"
    volumes:
      - ./backend/public/screenshots:/usr/src/app/backend/public/screenshots
      - ./guacamole/recordings:/var/lib/guacamole/recordings:rw
    environment:
      - DB_URI=${DB_URI}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPEN_AI_SECRET=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - RPC_URL=${RPC_URL}
      - IPC_SECRET=${IPC_SECRET}
      - ANCHOR_PROVIDER_URL=${ANCHOR_PROVIDER_URL}
      # Docker Specific Paths
      - ANCHOR_WALLET=/usr/src/app/backend/secrets/solana-keypair.json
      - ANCHOR_WORKSPACE=/usr/src/app/backend/jailbreak-pool
      # VNC Configuration
      - VNC_HOST=windows
      - VNC_PORT=5900
      - VNC_PASSWORD=admin
      - SERVICE_HOST=windows
      - SERVICE_PORT=6950
      - GYM_TREASURY_WALLET=${GYM_TREASURY_WALLET}
      - GYM_TREASURY_WEBHOOK=${GYM_TREASURY_WEBHOOK}
      - VIRAL_TOKEN=${VIRAL_TOKEN}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - GUACAMOLE_PASSWORD=${GUACAMOLE_PASSWORD}
      - GUACAMOLE_USERNAME=${GUACAMOLE_USERNAME}
      - AX_PARSER_SECRET=${AX_PARSER_SECRET}
    depends_on:
      - mongodb
      # - windows
    extra_hosts:
      - "host.docker.internal:host-gateway"

  frontend-prod:
    profiles:
      - production
    build:
      context: frontend
    container_name: frontend
    working_dir: /usr/src/app/frontend
    networks:
      - node-network
    tty: true
    ports:
      - "5173:5173"
    command: sh -c "npm run build && npm run preview -- --host 0.0.0.0 --port 5173"
    
  # Development Services
  nginx-dev:
    profiles:
      - development
    build:
      context: nginx
    container_name: nginx
    restart: always
    tty: true
    ports:
      - "80:80"
    networks:
      - node-network
    depends_on:
      - backend-dev
      - frontend-dev

  backend-dev:
    profiles:
      - development
    build:
      context: backend
    container_name: backend
    working_dir: /usr/src/app/backend
    networks:
      - node-network
    tty: true
    ports:
      - "8001:8001"
    command: npm run dev
    volumes:
      - ./backend:/usr/src/app/backend
      - /usr/src/app/backend/node_modules/  # This creates an anonymous volume for node_modules
      # training data output
      - ./backend/public/screenshots:/usr/src/app/backend/public/screenshots
      - ./guacamole/recordings:/var/lib/guacamole/recordings:rw
    environment:
      - DB_URI=${DB_URI}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPEN_AI_SECRET=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - RPC_URL=${RPC_URL}
      - ANCHOR_PROVIDER_URL=${ANCHOR_PROVIDER_URL}
      - IPC_SECRET=${IPC_SECRET}
      - FEEDBACK_WEBHOOK=${FEEDBACK_WEBHOOK}
      # Docker Specific Paths
      - ANCHOR_WALLET=/usr/src/app/backend/secrets/solana-keypair.json
      - ANCHOR_WORKSPACE=/usr/src/app/backend/jailbreak-pool
      - SERVICE_HOST=windows
      - SERVICE_PORT=6950
      - GYM_TREASURY_WALLET=${GYM_TREASURY_WALLET}
      - GYM_TREASURY_WEBHOOK=${GYM_TREASURY_WEBHOOK}
      - VIRAL_TOKEN=${VIRAL_TOKEN}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - GUACAMOLE_PASSWORD=${GUACAMOLE_PASSWORD}
      - GUACAMOLE_USERNAME=${GUACAMOLE_USERNAME}
      - AX_PARSER_SECRET=${AX_PARSER_SECRET}
    depends_on:
      - mongodb
      - guacd
      # - windows
    extra_hosts:
      - "host.docker.internal:host-gateway"
    
  frontend-dev:
    profiles:
      - development
    build:
      context: frontend
    container_name: frontend
    working_dir: /usr/src/app/frontend
    networks:
      - node-network
    tty: true
    ports:
      - "5173:5173"
    command: npm run dev
    volumes: 
      - ./frontend:/usr/src/app/frontend
      - /usr/src/app/frontend/node_modules/  
    environment:
      - NODE_ENV=development

networks:
  node-network:
    driver: bridge

volumes:
  mongodb_data:
  guacamole_db:
